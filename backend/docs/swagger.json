{
    "swagger": "2.0",
    "info": {
        "description": "This is a backend server for T1 hackaton.",
        "title": "T1 Hackaton API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost",
    "basePath": "/",
    "paths": {
        "/sprint/add": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sprint"
                ],
                "summary": "Add single sprint",
                "parameters": [
                    {
                        "description": "Sprint",
                        "name": "sprint",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Sprint"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Result"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/sprint/all": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sprint"
                ],
                "summary": "Get array of sprints",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Sprint"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/sprint/task/all": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sprint"
                ],
                "summary": "Get all sprint tasks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "GetAllSprintTasks",
                        "name": "sprint_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Task"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/sprint/update-status": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sprint"
                ],
                "summary": "Update status of sprint",
                "parameters": [
                    {
                        "description": "UpdateSprintStatus",
                        "name": "updatesprint",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.UpdateSprintStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Result"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/sprints/add": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sprint"
                ],
                "summary": "Add array of sprints",
                "parameters": [
                    {
                        "description": "Sprints",
                        "name": "sprint",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Sprint"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Result"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/task/add": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Add array of tasks",
                "parameters": [
                    {
                        "description": "AddTasks",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Task"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Result"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/task/changes/all": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "changes"
                ],
                "summary": "Get task changes by entity_id(task_id)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "GetTaskChanges",
                        "name": "entity_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TaskChange"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/task/get-by-ticketnumber": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Get task by TicketNumber",
                "parameters": [
                    {
                        "type": "string",
                        "description": "GetTaskByTicketNumber",
                        "name": "ticket_number",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/task/update-state": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Update state of task",
                "parameters": [
                    {
                        "description": "UpdateTaskState",
                        "name": "updatestate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.UpdateTaskStatesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Result"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/task/update-status": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Update status of task",
                "parameters": [
                    {
                        "description": "UpdateSprintStatus",
                        "name": "updatestatus",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.UpdateTaskStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Result"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/tasks/changes/add": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "changes"
                ],
                "summary": "Add array of tasks changes",
                "parameters": [
                    {
                        "description": "AddTasksChanges",
                        "name": "taskschanges",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TaskChange"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Result"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "http.Error": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "http.Result": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "http.UpdateSprintStatusRequest": {
            "type": "object",
            "properties": {
                "new_status": {
                    "type": "string"
                },
                "sprint_id": {
                    "type": "integer"
                }
            }
        },
        "http.UpdateTaskStatesRequest": {
            "type": "object",
            "properties": {
                "entity_id": {
                    "type": "integer"
                },
                "new_state": {
                    "type": "string"
                }
            }
        },
        "http.UpdateTaskStatusRequest": {
            "type": "object",
            "properties": {
                "entity_id": {
                    "type": "integer"
                },
                "new_status": {
                    "type": "string"
                }
            }
        },
        "models.Sprint": {
            "type": "object",
            "properties": {
                "entity_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "sprint_end_date": {
                    "type": "string"
                },
                "sprint_id": {
                    "type": "integer"
                },
                "sprint_name": {
                    "type": "string"
                },
                "sprint_start_date": {
                    "type": "string"
                },
                "sprint_status": {
                    "type": "string"
                }
            }
        },
        "models.Task": {
            "type": "object",
            "properties": {
                "area": {
                    "type": "string"
                },
                "assignee": {
                    "description": "может быть NULL",
                    "type": "string"
                },
                "create_date": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "due_date": {
                    "description": "может быть NULL",
                    "type": "string"
                },
                "entity_id": {
                    "type": "integer"
                },
                "estimation": {
                    "description": "может быть NULL",
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "parent_ticket_id": {
                    "description": "может быть NULL",
                    "type": "integer"
                },
                "priority": {
                    "type": "string"
                },
                "rank": {
                    "type": "string"
                },
                "resolution": {
                    "description": "может быть NULL",
                    "type": "string"
                },
                "spent": {
                    "description": "может быть NULL",
                    "type": "number"
                },
                "state": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "ticket_number": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "update_date": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "models.TaskChange": {
            "type": "object",
            "properties": {
                "entity_id": {
                    "type": "integer"
                },
                "history_change": {
                    "type": "string"
                },
                "history_change_type": {
                    "type": "string"
                },
                "history_date": {
                    "type": "string"
                },
                "history_property_name": {
                    "type": "string"
                },
                "history_version": {
                    "type": "number"
                }
            }
        }
    }
}