Анализ расчетов каждого показателя в соответствии с требованиями:
1. "К выполнению" (To Do)
Требования:
•	Сумма оценок задач в статусе категории = "Создано".
•	Для прошлых спринтов задачи учитываются в последнем статусе, в который они были переведены в рамках выбранного спринта. Если статус не изменялся, учитывается статус на момент закрытия спринта.
•	Для активных спринтов отражаются ежедневные изменения статусов.
•	Формат: число с одним знаком после запятой.
•	Формула: SUM(estimation / 3600).
Анализ кода:
•	Функция map_status_category корректно относит задачи со статусом Создано к категории 'To Do'.
•	Поле estimation_hours рассчитывается как estimation / 3600.
•	Ежедневные суммы рассчитываются с использованием группировки по date и status_category.
•	Вывод: Код правильно рассчитывает показатель "К выполнению" в соответствии с требованиями.
________________________________________
2. "В работе" (In Progress)
Требования:
•	Сумма оценок задач, не удовлетворяющих критериям для категорий "Сделано" и "Снято".
•	Аналогичная логика обработки статусов, как и для "К выполнению".
•	Формат: число с одним знаком после запятой.
•	Формула: SUM(estimation / 3600).
Анализ кода:
•	Функция map_status_category относит задачи со статусом В работе к категории 'In Progress'.
•	Однако задачи, не отнесенные явно к другим категориям, попадают в 'Other'.
•	Идентифицированная проблема: Код не включает все подходящие статусы в категорию "In Progress".
•	Решение: Изменить map_status_category, чтобы задачи, не попадающие в "To Do", "Done" или "Removed", относились к "In Progress".
Обновленная функция:
python
Копировать код
def map_status_category(status, resolution, task_type):
    if status == 'Создано':
        return 'To Do'
    elif status in ['Закрыто', 'Выполнено']:
        if resolution in ['Отклонено', 'Отменено инициатором', 'Дубликат'] or (task_type == 'Дефект' and status == 'Отклонен исполнителем'):
            return 'Removed'
        else:
            return 'Done'
    else:
        return 'In Progress'
________________________________________
3. "Сделано" (Done)
Требования:
•	Сумма оценок Историй, Задач и Дефектов в статусе категории = "Закрыто", "Выполнено".
•	Исключить снятые задачи.
•	Формат: число с одним знаком после запятой.
•	Формула: SUM(estimation / 3600).
Анализ кода:
•	Функция map_status_category корректно определяет задачи "Done", исключая снятые.
•	Поле estimation_hours суммируется для задач категории "Done".
•	Вывод: Код правильно рассчитывает показатель "Сделано".
________________________________________
4. "Снято" (Removed)
Требования:
•	Сумма оценок снятых объектов.
•	Объект считается "снятым", если:
o	Статус категории = "Закрыто", "Выполнено" с резолюцией "Отклонено", "Отменено инициатором", "Дубликат".
o	Либо это дефект со статусом "Отклонен исполнителем".
•	Формат: число с одним знаком после запятой.
•	Формула: SUM(estimation / 3600).
Анализ кода:
•	Функция map_status_category корректно относит задачи с подходящими статусами и резолюциями к категории "Removed".
•	Поле estimation_hours суммируется для задач категории "Removed".
•	Вывод: Код правильно рассчитывает показатель "Снято".
________________________________________
5. "Бэклог изменен с начала спринта на" (Backlog Change %)
Требования:
•	Процент суммы оценок задач, добавленных спустя два дня после старта спринта, от суммы оценок задач, добавленных до или в течение двух дней после старта спринта.
•	Исключить дефекты.
•	Формат: процент с одним знаком после запятой.
•	Формула: (Сумма поздних добавлений * 100) / Сумма ранних добавлений.
Анализ кода:
•	Код вычисляет early_tasks и late_tasks на основе даты добавления задач в спринт.
•	Дефекты исключаются из обеих групп.
•	Процент изменения рассчитывается корректно.
•	Вывод: Код правильно рассчитывает показатель "Бэклог изменен с начала спринта на".
________________________________________
6. "Заблокировано задач в Ч/Д" (Blocked tasks in hours/days)
Требования:
•	Сумма оценок задач, у которых есть связь типа "Заблокировано" или "is blocked by".
•	Задачи не должны находиться в статусе категории "Done".
•	Формат: число с одним знаком после запятой.
Анализ кода:
•	Идентифицированная проблема: Код не учитывает данный показатель.
•	Решение: Необходимо добавить данные о связях задач (типы "Заблокировано") для вычисления.
________________________________________
7. "Исключено (ЧД/шт)" (Excluded (hours/days/pieces))
Требования:
•	Сумма оценок и количество задач, исключенных из спринта на каждый день.
•	Если задача исключена и снята в один день, она не учитывается.
•	Если задача добавлена и исключена несколько раз за день, учитывается только последнее изменение.
•	Формат: два показателя: часы и количество.
Анализ кода:
•	Код пытается вычислить Removed_Hours и Removed_Count для каждого дня.
•	Идентифицированная проблема:
o	Задачи, исключенные и снятые в один день, могут быть учтены некорректно.
o	Не учитываются случаи, когда задача добавляется и исключается в один день.
•	Решение: Добавить логику для корректного отслеживания изменений задач.
________________________________________
8. "Добавлено (ЧД/шт)" (Added (hours/days/pieces))
Требования:
•	Сумма оценок и количество задач, добавленных в спринт на каждый день.
•	Задачи, добавленные до старта спринта, фиксируются в первый день.
•	Формат: два показателя: часы и количество.
Анализ кода:
•	Код пытается вычислить Added_Hours и Added_Count для каждого дня.
•	Идентифицированная проблема:
o	Не обрабатываются задачи, добавленные и исключенные в один день.
•	Решение: Внедрить отслеживание состояния задач для точного учета.
________________________________________
Обновленный код (с учетом исправлений):
python
Копировать код
def map_status_category(status, resolution, task_type):
    if status == 'Создано':
        return 'To Do'
    elif status in ['Закрыто', 'Выполнено']:
        if resolution in ['Отклонено', 'Отменено инициатором', 'Дубликат'] or (task_type == 'Дефект' and status == 'Отклонен исполнителем'):
            return 'Removed'
        else:
            return 'Done'
    else:
        return 'In Progress'
________________________________________
Выводы:
•	Большинство показателей рассчитываются корректно.
•	Необходимо:
o	Внедрить расчет "Заблокировано задач".
o	Скорректировать логику для показателей "Добавлено" и "Исключено".
•	Провести дополнительные тесты, чтобы проверить точность расчетов для всех сценариев.
